---
// Tools
import { Picture } from "astro:assets";
import { getRatio } from "@/lib/helpers";

// Compositions
import Frame from "../compositions/Frame.astro";

// Components
import ArrowIcon from "../ui/ArrowIcon.astro";

// Data

type Props = {
  orientation: "landscape" | "portrait" | "wide" | "square";
  imagePaths: string[];
};
const { imagePaths, orientation } = Astro.props;

// Assets

// Collect all images in given path
const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/content/projects/images/**/*.{jpeg,jpg}"
);

imagePaths.forEach((imagePath) => {
  const newPath = `/src/content/projects/${imagePath}`;

  if (!images[newPath])
    throw new Error(
      `"${imagePath}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`
    );
});

const ratio = getRatio(orientation);
---

<div class="single-slide-gallery">
  <div class="single-slide-swiper swiper">
    <div class="swiper-wrapper">
      {
        imagePaths?.map((imagePath) => {
          const newPath = `/src/content/projects/${imagePath}`;

          return (
            <div class="swiper-slide ">
              <Frame ratio={ratio} class="img-wrapper">
                <Picture
                  src={images[newPath]()}
                  width={1100}
                  formats={["avif", "webp"]}
                  alt=""
                  densities={[1.5, 2]}
                />
              </Frame>
              <div class="slide-gradient" />
            </div>
          );
        })
      }
    </div>

    <div class="swiper-navigation">
      <div class="swiper-buttons">
        <div class="swiper-button swiper-button-prev">
          <ArrowIcon style="primary" direction="left" />
        </div>
        <div class="swiper-button swiper-button-next">
          <ArrowIcon style="primary" />
        </div>
      </div>
    </div>
  </div>

  <div class="annotation">
    <slot />
  </div>
</div>

<style>
  @import "@styles/04-utilities/breakpoints.css";

  .single-slide-swiper {
    position: relative;
    isolation: isolate;
  }

  .swiper-slide {
    position: relative;
  }

  .slide-gradient {
    --_radius: var(--rounded-lg);

    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;

    height: 40%;
    opacity: 0.6;

    background-image: linear-gradient(
      0deg,
      var(--color-black),
      35%,
      transparent
    );

    border-end-start-radius: var(--_radius);
    border-end-end-radius: var(--_radius);

    transition: opacity var(--transition-default);

    @media (--tablet-and-up) {
      --_radius: var(--rounded-xl);
    }
  }

  .swiper-buttons {
    display: flex;
    gap: var(--space-2-fixed);
  }

  .swiper-button {
    --_size: 40px;

    height: var(--_size);
    width: var(--_size);

    cursor: pointer;
  }

  .swiper-button-disabled {
    opacity: 0;
    cursor: auto;
    pointer-events: none;
  }

  .swiper-navigation {
    --_position: var(--space-4-fixed);

    position: absolute;
    right: var(--_position);
    bottom: var(--_position);

    z-index: 10;

    @media (--tablet-and-up) {
      --_position: var(--space-6-fixed);
    }

    @media (--laptop-and-up) {
      --_position: var(--space-8-fixed);
    }
  }

  .annotation {
    margin-block-start: var(--space-4-fixed);
    text-align: center;

    & > :global(p) {
      font-size: var(--text-minus-2);
      color: var(--color-gray-400);
    }
  }

  /* State */

  .swiper-slide:hover .slide-gradient {
    /* opacity: 0; */
  }
</style>
