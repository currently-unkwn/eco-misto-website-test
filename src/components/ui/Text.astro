---
type tagOptions = "p" | "span" | "div" | "label";

const sizeOptions = {
  "x-small": "x-small",
  small: "small",
  medium: "medium",
  large: "large",
  "x-large": "x-large",
  "xx-large": "xx-large",
  "xxx-large": "xxx-large",
} as const;

type Props = {
  tagName: tagOptions;
  size: keyof typeof sizeOptions;
  class?: string;
  rest?: any;
};

const { tagName, size, class: classList, ...rest } = Astro.props;

// Assigning tagName to a capital Tag (so Astro knows it's a component)
const Tag = tagName;
---

<Tag {...rest} class:list={["text", classList, sizeOptions[size]]}>
  <slot />
</Tag>

<style>
  .text {
    /* text-wrap: balance; */
  }
  .x-small {
    font-size: var(--text-minus-3);
  }

  .small {
    font-size: var(--text-minus-2);
  }

  .medium {
    font-size: var(--text-minus-1);
  }

  .large {
    font-size: var(--text-base);
  }

  .x-large {
    font-size: var(--text-1);
  }

  .xx-large {
    font-size: var(--text-2);
  }

  .xxx-large {
    font-size: var(--text-3);
  }
</style>
