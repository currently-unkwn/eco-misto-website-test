---
// Tools
import { Icon } from "astro-icon/components";

// Components
import Button from "@ui/Button.astro";

type Props = {
  name: string;
};

const { name } = Astro.props;

function getLabel(name: string) {
  return name.split("-").join(" ");
}

const label = getLabel(name);

// console.log(name);
---

<div class="modal-overlay jsModalOverlay" data-modal={name}>
  <div class="modal" role="dialog" aria-modal="true" aria-label={label}>
    <Button
      variant="icon"
      style="ghost"
      class="modal__close-button jsModalClose"
      aria-label={`Close ${label}`}
      isDefault={false}
    >
      <Icon name="icon-close" size={32} />
      <span class="sr-only">{`Close ${label}`}</span>
    </Button>

    <div class="modal__content">
      <slot />
    </div>
  </div>
</div>

<style>
  @import "@styles/04-utilities/breakpoints.css";

  .modal-overlay {
    position: fixed;

    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    opacity: 0;
    z-index: -1;

    background-color: rgba(0, 0, 0, 0.8);
    visibility: hidden;
    transition:
      opacity 200ms ease-out,
      z-index 0s 200ms,
      visibility 0s 200ms;
  }

  .modal-overlay.is-open {
    opacity: 1;
    z-index: 1;
    transition-delay: 0s;
    visibility: visible;
  }

  .modal {
    --_size: 100%;

    position: absolute;
    top: 0;
    right: 0;

    inline-size: var(--_size);
    block-size: 100%;

    background-color: var(--color-white);

    animation: slide-left-out 300ms var(--ease-out) forwards;

    @media (--tablet-and-up) {
      --_size: 31rem;

      border-top-left-radius: var(--rounded-lg);
      border-bottom-left-radius: var(--rounded-lg);
    }
  }

  .modal button {
    outline-color: var(--color-primary);
  }

  .modal-overlay.is-open .modal {
    animation: slide-left-in 300ms var(--ease-out) backwards;
    animation-delay: 100ms;
  }

  .modal__content {
    /* display: flex;
    flex-direction: column;
    justify-content: center; */

    height: 100%;
    height: 100svh;

    /* padding-block-end: var(--space-7-fixed); */
  }

  .modal__close-button {
    /* TEMP */
    /* display: none; */

    --_icon-size: 20px;

    position: absolute;
    top: calc(var(--space-7-fixed) - 12px);
    left: calc(var(--space-7-fixed) - 8px);

    /* padding: 4px; */

    color: var(--color-black);

    /* border-radius: 8px; */

    & svg {
      width: var(--_icon-size);
      height: var(--_icon-size);
    }

    @media (--laptop-and-up) {
      top: calc(var(--space-7-fixed) - 4px);
    }

    @media (--laptop-and-up) {
      --_icon-size: 24px;

      /* padding: 8px; */
    }
  }

  .modal__close-button:hover {
    /* TODO: Pick a neutral color, add transition */
    background-color: var(--color-gray-100);
  }

  @keyframes slide-left-in {
    0% {
      transform: translateX(100%);
    }

    100% {
      transform: translateX(0);
    }
  }

  @keyframes slide-left-out {
    0% {
      transform: translateX(0);
    }

    100% {
      transform: translateX(100%);
    }
  }

  @keyframes fade-in {
    0% {
      opacity: 0;
    }

    100% {
      opacity: 1;
    }
  }
</style>

<script>
  // console.log(window.location.href);
</script>
