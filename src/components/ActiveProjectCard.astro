---
// Tools
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";

// Compositions
import Frame from "./compositions/Frame.astro";
import Stack from "./compositions/Stack.astro";

// Components
import Heading from "./ui/Heading.astro";
import Link from "./ui/Link.astro";
import Text from "./ui/Text.astro";
import MyPicture from "./ui/MyPicture.astro";
import ArrowIcon from "./ui/ArrowIcon.astro";
import Cluster from "./compositions/Cluster.astro";
import { Icon } from "astro-icon/components";

// Data
type Props = {
  project: CollectionEntry<"projects">;
  class?: string;
  [key: string]: any;
};

const { project, class: classList, ...rest } = Astro.props;
const { title, description, cover, color = "accent" } = project.data;

const backgroundColor = `var(--color-${color})`;
---

<article class:list={[classList]} {...rest}>
  <Link href={`/projects/${project.slug}`} class="wrapper">
    <Stack space="space-8">
      <Frame ratio="4:3" class="img-wrapper">
        <MyPicture src={cover} width={600} alt="" />
      </Frame>

      <Cluster noWrap justify="between" alignItems="baseline" space="space-7">
        <Stack space="space-3">
          <Heading
            tagName="h4"
            size="h5"
            class="title font-heading color-secondary"
          >
            {title}
          </Heading>
          <Text tagName="p" size="medium" class="color-black description">
            {description}
          </Text>
        </Stack>
        <Icon
          name="icon-arrow-right"
          aria-hidden="true"
          focusable="false"
          class="color-primary"
        />
      </Cluster>
    </Stack>
  </Link>
</article>

<style define:vars={{ backgroundColor }}>
  @import "@styles/04-utilities/breakpoints.css";

  .wrapper {
    width: 100%;
    text-decoration: none;

    & svg {
      --_size: var(--space-6);

      inline-size: var(--_size);
      block-size: var(--_size);

      flex-shrink: 0;
      transform: translateY(-2px) rotate(-45deg);

      transition: transform var(--transition-default);
    }
  }



  .title {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
    overflow: hidden;

    transition: color var(--transition-default);
  }

  .description {
    max-width: 28rem;

    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
    overflow: hidden;
  }

  .img-wrapper {
    /* height: 28.5rem; */
    --_border-radius: var(--rounded-2xl);
    --_img-padding: var(--space-4-fixed);

    padding: var(--_img-padding);
    background-color: var(--backgroundColor);
    border-radius: var(--_border-radius);

    transition: filter 300ms var(--ease-out);

    & :global(img) {
      transition: transform 300ms var(--ease-out);
      object-fit: contain;
    }

    @media (--laptop-and-up) {
      --_border-radius: var(--rounded-3xl);
      --_img-padding: var(--space-9-fixed);
    }
  }

  /* State */

  .wrapper:hover .title {
    color: var(--color-primary);
  }

  .wrapper:hover .img-wrapper {
    filter: brightness(103%);

    & :global(img) {
      /* transform: scale(1.03); */
      transform: scale3d(1.05, 1.05, 1.05);
    }
  }

  .wrapper:hover svg {
    transform: translateY(-2px) rotate(0deg);
  }
</style>
